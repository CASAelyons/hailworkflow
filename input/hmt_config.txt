//*********************hmt_config.txt****************************//
//**$Id:hmt_config.txt, v 0.9 2016-06-14 09:20:00 elyons Exp $***//
//******Copyright 2016 University of Massachusetts Amherst*******//
//********************All rights reserved************************//
//***************************************************************//
//***************************************************************//
//*hmt_config.txt is used by the 'hmt' program. Do not rename****//
//*The HMTHOME environment variable defines hmt_config's location//
//*****Make sure all lines are terminated with a semi-colon******//
//***************************************************************//

//bool mcc_output determines whether hmt connects via socket to the MCC feature repository
mcc_output = false;

//string mcc_host is the IP address of the server hosting the MCC feature repository
mcc_host = "127.0.0.1";

//int mcc_port is the port used by the MCC feature repository server
//default is 20001
mcc_port = 20001;

//bool acs_output determines whether hmt connects via socket to the ACS interface
acs_output = false;

acs_params = 
{

//string acs_host is the IP address of the server hosting the ACS interface
acs_host = [ "128.119.44.21" ];

//int acs_port is the port used by the ACS interface
//default is 30001
acs_port = [ 30986 ];
};

//bool file_output determines whether we create a file containing hmt output
file_output = false;

//string file_name is the name of the hmt output text file.  Detections are appended.
file_name = "/data/hmt/hmt.txt";

//bool netcdf_output determines whether we generate a netcdf file containing the detections.
netcdf_output = false;

//string netcdf_directory is the output directory for netcdf files if netcdf_output is true
netcdf_directory = "/data/hmt/netcdf";

//bool json_output determines whether we generate an json file containing the detections.
json_output = true;

//string json_directory is the output directory for json files if json_output is true
json_directory = ".";

//bool kml_output determines whether we generate an kml file containing the detections.
kml_output = false;

//string kml_directory is the output directory for kml files if kml_output is true
kml_directory = "/data/hmt/kml";

//algorithm parameters
alg_params =
{

//array contour_levels are the thresholds that we'll contour on.
//list these as floats eg. [3.5, 5.0] 
//hmt input data is unitless.  Numbers reflect detection types.
//Algorithm only works if using a between type value... Eg. 3.5 to distinguish 3 from 4
//Because values are not continuous, 3.5 will also distinguish 3 from 5, which is a bit problematic
//May need to update algorithm in the future... for now, for hail detections, 3.5 works.  
//See input file header for detection -> int meanings as files have changed over time
contour_levels = [3.5];

min_contour_points = 3;

};

